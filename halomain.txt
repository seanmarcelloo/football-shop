{% extends 'base.html' %}
{% load static %}

{% block meta %}
<title>FootyBall</title>
{% endblock meta %}

{% block content %}
{% include 'navbar.html' %}

<div class="bg-gray-50 w-full pt-16 min-h-screen">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

    <!-- Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Latest Football Products</h1>
      <p class="text-gray-600">Discover the newest arrivals in football gear and apparel.</p>
    </div>

    <!-- Buttons -->
    <div class="flex flex-wrap items-center gap-3 mb-4">
      <button onclick="showModal()" 
              class="inline-flex items-center px-4 py-2 bg-white text-red-600 font-semibold outline outline-2 outline-red-600 outline-offset-[-2px] rounded-md hover:bg-red-600 hover:text-white transition-colors">
              Add Product
      </button>

      <button onclick="fetchProductFromServer()" 
              class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 font-medium border border-gray-300 rounded-md hover:bg-gray-200 transition-colors">
              Refresh
      </button>
    </div>

    <!-- Filters -->
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8 bg-white rounded-lg border border-gray-200 p-4">
      <div class="flex space-x-3 mb-4 sm:mb-0">
        <a id="filter-all" href="#" 
           class="bg-red-600 text-white px-4 py-2 rounded-md font-medium transition-colors hover:bg-red-700">
          All Product
        </a>
        <a id="filter-my" href="#" 
           class="bg-white text-gray-700 border border-gray-300 px-4 py-2 rounded-md font-medium transition-colors hover:bg-red-600 hover:text-white">
          My Product
        </a>
      </div>
      {% if user.is_authenticated %}
      <div class="text-sm text-gray-500">Last login: {{ last_login }}</div>
      {% endif %}
    </div>

    <!-- Loading -->
    <div id="loading" class="bg-white rounded-lg border border-gray-200 p-12 text-center hidden">
      <svg class="animate-spin h-8 w-8 text-red-600 inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
      </svg>
      <p class="text-gray-600 mt-3">Loading products...</p>
    </div>

    <!-- Error -->
    <div id="error" class="hidden text-center text-red-600 font-medium">
      Failed to load product data. Please try again later.
    </div>

    <!-- Product Grid -->
    <div id="grid" class="hidden"></div>

    <!-- Empty -->
    <div id="empty" class="bg-white rounded-lg border border-gray-200 p-12 text-center hidden">
      <div class="w-32 h-32 mx-auto mb-4">
        <img src="{% static 'image/no-product.jpg' %}" alt="No product available ;-;" class="w-full h-full object-contain">
      </div>
      <h3 class="text-lg font-medium text-gray-900 mb-2">No product found</h3>
      <p class="text-gray-500 mb-6">Be the first to sell your product</p>
      <button onclick="showModal()" 
              class="inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
        Add Product
      </button>
    </div>

  </div>
</div>

<script>
const PRODUCT_API_ENDPOINT = "{% url 'main:products_json' %}";
const CREATE_API = "{% url 'main:product_create_ajax' %}";
const UPDATE_API = (id) => `/ajax/products/${id}/update/`;
const DELETE_API = (id) => `/ajax/products/${id}/delete/`;

const CURRENT_USER_ID = "{{ user.id|default_if_none:'' }}";

const loadingSpinner = document.getElementById('loading');
const errorMessage = document.getElementById('error');
const emptyStateDisplay = document.getElementById('empty');
const productGridContainer = document.getElementById('grid');
const showAllProductButton = document.getElementById('filter-all');
const showMyProductButton = document.getElementById('filter-my');

let activeFilter = 'all';
let allProductData = [];
let selectedProductId = null;

// === Utility ===
function displayPageSection({ showLoading = false, showError = false, showEmpty = false, showGrid = false }) {
  loadingSpinner.classList.toggle('hidden', !showLoading);
  errorMessage.classList.toggle('hidden', !showError);
  emptyStateDisplay.classList.toggle('hidden', !showEmpty);
  productGridContainer.classList.toggle('hidden', !showGrid);
  if (showGrid) productGridContainer.className = 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6';
}
function formatRupiah(num) {
  return new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }).format(num);
}

// === Build Cards ===
function buildProductCard(p) {
  const article = document.createElement('article');
  article.className = 'group relative bg-white rounded-xl border border-gray-200 overflow-hidden shadow hover:shadow-lg hover:-translate-y-1 transition transform duration-300';
  const thumb = p.thumbnail 
    ? `<img src="${p.thumbnail}" alt="${p.name}" class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500">`
    : `<div class="w-full h-full bg-gray-200 flex items-center justify-center text-gray-400 text-sm">No Image</div>`;
  const featured = p.is_featured 
    ? `<div class="absolute top-3 left-3"><span class="inline-flex items-center px-3 py-1 text-xs font-bold rounded-full shadow-md bg-yellow-400 text-white">Featured</span></div>` 
    : '';
  const ownerButtons = CURRENT_USER_ID && String(CURRENT_USER_ID) === String(p.user_id)
    ? `<div class="flex space-x-2 mt-2">
        <button onclick='showModal(${JSON.stringify(p)})' class="flex-1 px-3 py-2 text-xs rounded bg-gray-100 text-gray-700 hover:bg-gray-200">Edit</button>
        <button onclick='showDeleteModal("${p.id}")' class="flex-1 px-3 py-2 text-xs rounded bg-red-600 text-white hover:bg-red-700">Delete</button>
      </div>`
    : `<a href="/product/${p.id}/" class="block w-full text-center mt-2 px-3 py-2 text-sm rounded bg-red-600 text-white hover:bg-red-700">View</a>`;
  article.innerHTML = `
    <div class="relative aspect-square overflow-hidden">${thumb}${featured}</div>
    <div class="p-4">
      <span class="inline-block px-3 py-1 text-xs font-semibold bg-red-100 text-red-700 rounded-full">${p.category}</span>
      <h3 class="text-base font-semibold text-gray-900 mt-2 mb-1 line-clamp-2">${p.name}</h3>
      <div class="text-lg font-bold text-red-600 mb-1">${formatRupiah(p.price)}</div>
      ${ownerButtons}
    </div>`;
  return article;
}

// === Render Cards ===
function renderAllProductCards(products) {
  productGridContainer.innerHTML = '';
  products.forEach(p => productGridContainer.appendChild(buildProductCard(p)));
}

// === Filter + Fetch ===
function filterAndDisplayProduct() {
  const filtered = activeFilter === 'all'
    ? allProductData
    : allProductData.filter(p => Number(p.user_id) === Number(CURRENT_USER_ID));
  if (filtered.length === 0) displayPageSection({ showEmpty: true });
  else {
    renderAllProductCards(filtered);
    displayPageSection({ showGrid: true });
  }
}

async function fetchProductFromServer() {
  try {
    displayPageSection({ showLoading: true });
    const response = await fetch(`${PRODUCT_API_ENDPOINT}?filter=${activeFilter}`);
    if (!response.ok) throw new Error('Failed to fetch');
    allProductData = await response.json();
    filterAndDisplayProduct();
  } catch {
    displayPageSection({ showError: true });
  }
}

// === Modal Functions ===
function showModal(p = null) {
  const modal = document.getElementById('product-modal');
  modal.classList.remove('hidden');
  document.getElementById('modal-title').textContent = p ? 'Edit Product' : 'Add Product';
  document.getElementById('product-id').value = p?.id || '';
  document.getElementById('product-name').value = p?.name || '';
  document.getElementById('product-price').value = p?.price || '';
  document.getElementById('product-category').value = p?.category || 'jersey';
  document.getElementById('product-thumbnail').value = p?.thumbnail || '';
  document.getElementById('product-featured').checked = !!p?.is_featured;
}
function hideModal() { document.getElementById('product-modal').classList.add('hidden'); }

function showDeleteModal(id) {
  selectedProductId = id;
  document.getElementById('delete-modal').classList.remove('hidden');
}

function hideDeleteModal() { document.getElementById('delete-modal').classList.add('hidden'); }





// === CRUD Handlers with Toast ===
document.getElementById('product-form').addEventListener('submit', async (e) => {
  e.preventDefault();
  const id = document.getElementById('product-id').value;
  const formData = new FormData(e.target);
  const url = id ? UPDATE_API(id) : CREATE_API;

  try {
    const response = await fetch(url, { method: 'POST', body: formData });
    const data = await response.json();
    if (!response.ok) throw data;
    hideModal();
    await fetchProductFromServer();
    showToast('Success', id ? 'Product updated successfully' : 'Product created successfully', 'success');
  } catch (err) {
    showToast('Error', err.error || 'Failed to save product', 'error');
  }
});

document.getElementById('confirm-delete-btn').addEventListener('click', async () => {
  try {
    const response = await fetch(DELETE_API(selectedProductId), { method: 'POST' });
    const data = await response.json();
    if (!response.ok) throw data;
    hideDeleteModal();
    await fetchProductFromServer();
    showToast('Deleted', 'Product deleted successfully', 'success');
  } catch (err) {
    showToast('Error', err.error || 'Failed to delete product', 'error');
  }
});

// === Filter Buttons ===
showAllProductButton.addEventListener('click', () => { activeFilter = 'all'; fetchProductFromServer(); });
showMyProductButton.addEventListener('click', () => { activeFilter = 'my'; fetchProductFromServer(); });

// === Init ===
fetchProductFromServer();
</script>
{% endblock content %}
